snippet ff "scope function"
(function() {
	'use strict';

	$0
})();
endsnippet

snippet f "function"
function($1) {$0}
endsnippet

snippet fn "function with name"
function ${1:Name}($2) {$0}
endsnippet

snippet .then "Then"
then(function($1) {
	$0
})
endsnippet

snippet cl "Console log"
console.log(${1:"${2:thing}"})
endsnippet

snippet fs "Private scope"
(function() {
	$0
})();
endsnippet

# angular

snippet inj "angular-mock inject"
inject(function($1) {
	$0
})
endsnippet

snippet directive "angular directive"
${1:app}.directive('${2:name}', function($3) {
	return {
		restrict: '${4:EA}',
		${5:scope: {$0}}
	};
});
endsnippet

snippet filter "angular filter"
${1:app}.filter('${2:name}', function($3) {
	return function(${4:input}) {
		return ${5:output};
	};
});
endsnippet

# jasmine

snippet desc "jasmine describe"
describe("${1:thing}", function() {
	$0
});
endsnippet

snippet it "jasmine it"
it("${1:does}", function() {
	$0
});
endsnippet

snippet bef "jasmine beforeEach"
beforeEach(${1:function() {
	$2
}});
endsnippet

snippet befm "jasmine angular module"
beforeEach(module('${1:name}'));
endsnippet

snippet befi "jasmine angular inject"
beforeEach(inject(function($1) {
	$0
}));
endsnippet

snippet aft "jasmine afterEach"
afterEach(${1:function() {
	$2
}});
endsnippet

snippet exp "jasmine expect"
expect($1).${2:toEqual(${3:thing})};
endsnippet

